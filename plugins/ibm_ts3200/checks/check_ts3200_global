#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
# Writed by Allan GooD: allan.cassaro@gmail.com
#

globalstatus_severity_level = (3,3)

def inventory_ts(info):
    inventory = []
    if len(info) > 0 and len(info[0]) > 0:
        inventory.append(("Global Status",globalstatus_severity_level))
    return inventory

def check_ts(item, params, info):
    warn, crit = params
    if (item == "Global Status"):
        value = int(info[0][0])
        faulterror = info[0][1]
        faultseverity = info[0][2]
        faultdescription = info[0][3]
        if (value == 1):
            return (1, "WARNING - Current status is: other - %s (error code: %s)" % (faultdescription,faulterror))
        elif (value == 2):
            return (1, "WARNING - Current status is: unknown - %s (error code: %s)" % (faultdescription,faulterror))
        elif (value == 3 or value == 0 or int(faulterror) == 0):
            return (0, "Global Status OK")
        elif (value == 4):
            return (1, "WARNING - Current status is: non-critical - %s (error code: %s)" % (faultdescription,faulterror))
        elif (value == 5):
            return (2, "CRITICAL - Current status is: critical - %s (error code: %s)" % (faultdescription,faulterror))
        elif (value == 6):
            return (2, "CRITICAL - Current status is: non-recoverable - %s (error code: %s)" % (faultdescription,faulterror))
        else:
            return (3, "UNKNOWN - Unknown status code - %s (error code: %s)" % (faultdescription,faulterror))
    return (3, "UNKNOWN - Not implemented")

check_info["check_ts3200_global"] = {
    'check_function':		check_ts,
    'inventory_function':	inventory_ts,
    'service_description':	'Tape Library TS3200 %s',
    'snmp_scan_function':	lambda oid: oid(".1.3.6.1.4.1.2.6.211"),
    'group':			'ts3200',
    'has_perfdata':		False,
}

snmp_info["check_ts3200_global"] = ( ".1.3.6.1.4.1.2.6.211", [ "2.1.0", "3.1.1.22.1", "3.1.1.23.1", "3.1.1.24.1" ] )
